# Pulse ID data buffer transmission
#
# Mandatory macros:
#  P = Prefix for all records in the template eg. (SIN-CVME-TIFALL:)
#  ID = Used when multiple instances of the template are loaded. Defaults to empty string.
#  NAME = regDev name as configured with  mrfioc2_regDevConfigure() (ie EVG0DBUF)
#  
# Optional macros:
#  PULSEID_OFFSET = address offset (0x10)
#  MASTSEC_OFFSET = seconds offset (default: 0x18)
#  MASTNSEC_OFFSET = nsec offset (default: 0x1C)
#  MASTUINTCNT_OFFSET = 32-bit master counter offset (default: 0x20)
#  MASTPIDL_OFFSET = pulse id lower 32 bit offset (default: 0x24)
#  MASTPIDH_OFFSET = pulse id higher 32 bit offset (default: 0x28)
#
# Description:
#
# This database transmits the pulse id via databuffer. It loads the pulseId integer into the appropriate register and then flushes
# the buffer.
#
# Important Records:
#  $(P)TX$(ID)-PULSEID  - Transmitted Pulse ID
#  $(P)TX$(ID)-MTS-SEC  - Transmitted master timestamp seconds
#  $(P)TX$(ID)-MTS-NSEC - Transmitted master timestamp nanoseconds
#  $(P)TX$(ID)-MTS      - Timestamp of this record will be taken to transmit

record(ao, "$(P)TX$(ID)-PULSEID") {
  field(DESC,"Pulse ID to transmit")
  field(DTYP, "regDev")
  field(OUT, "@$(NAME):$(PULSEID_OFFSET=0x10) T=double")
  field(FLNK, "$(P)TX$(ID)-SET-MTS")
}

# reads timestamp (of the master) 
# and overwrites the 16 LSB of 32-bits nsec with 16 LSB of pulse ID
# it gives seconds past epics epoch in VAL
# it gives nsec of epics timestamp in RVAL  
#
record(ai,"$(P)TX$(ID)-SET-MTS") {
  field(DTYP,"Soft SetTimestamp")
  field(INP,"$(P)TX$(ID)-PULSEID")
  field(TSE,"-2")
  field(FLNK,"$(P)TX$(ID)-MTS-SEC")
}

record(calcout,"$(P)TX$(ID)-MTS-SEC") {
  field(DESC,"Transmit MTS seconds")
  field(DTYP, "regDev")
  field(INPA,"$(P)TX$(ID)-SET-MTS.VAL")    # master timestamp seconds
  field(CALC,"A")
  field(OUT, "@$(NAME):$(MASTSEC_OFFSET=0x18) T=UINT32")
  field(FLNK,"$(P)TX$(ID)-MTS-NSEC")
}

record(calcout,"$(P)TX$(ID)-MTS-NSEC") {
  field(DESC,"Transmit MTS nanoseconds")
  field(DTYP, "regDev")
  field(INPA,"$(P)TX$(ID)-SET-MTS.RVAL")   # master timestamp nanoseconds
  field(CALC,"A")
  field(OUT, "@$(NAME):$(MASTNSEC_OFFSET=0x1C) T=UINT32")
  field(FLNK, "$(P)TX$(ID)-UINT-CNT")
}

record(calcout,"$(P)TX$(ID)-UINT-CNT") {
  field(DESC, "Transmit UINT count")
  field(DTYP, "regDev")
  field(INPA, "$(P)TX$(ID)-UINT-CNT.VAL")   # master 32-bits counter
  field(CALC, "A+1")
  field(OUT,  "@$(NAME):$(MASTUINTCNT_OFFSET=0x20) T=UINT32")
  field(VAL, "0")
  field(PREC, "0")
  field(FLNK, "$(P)TX$(ID)-PIDL")
}

record(calcout,"$(P)TX$(ID)-PIDL") {
  field(DESC, "Transmit Pulse ID Lower 32 bit")
  field(DTYP, "regDev")
  field(INPA, "$(P)TX$(ID)-PULSEID")
  field(CALC, "A-floor(A/4294967296)*4294967296")
  field(OUT,  "@$(NAME):$(MASTPIDL_OFFSET=0x24) T=UINT32")
  field(PREC, "0")
  field(FLNK, "$(P)TX$(ID)-PIDH")
}

record(calcout,"$(P)TX$(ID)-PIDH") {
  field(DESC, "Transmit Pulse ID Higher 32 bit")
  field(DTYP, "regDev")
  field(INPA, "$(P)TX$(ID)-PULSEID")
  field(CALC, "floor(A/4294967296)")
  field(OUT,  "@$(NAME):$(MASTPIDH_OFFSET=0x28) T=UINT32")
  field(PREC, "0")
  field(FLNK, "$(P)TX$(ID)-SEQ-ID")
}

record(calcout,"$(P)TX$(ID)-SEQ-ID") {
  field(DESC, "Sequence id of current pulse")
  field(DTYP, "regDev")
  field(INPA, "$(SEQ-ID) NPP")
  field(CALC, "A")
  field(OUT, "@$(NAME):0x2C T=UINT32")
  field(FLNK, "$(P)TX$(ID)-SEQ1-START")
}

record(calcout,"$(P)TX$(ID)-SEQ1-START") {
  field(DESC, "Sequence 1 start HW counter vaule")
  field(DTYP, "regDev")
  field(INPA, "$(SEQ1-START-HW-CTR) NPP")
  field(CALC, "A")
  field(OUT, "@$(NAME):0x30 T=UINT32")
  field(FLNK, "$(P)TX$(ID)-SEQ1-END")
}

record(calcout,"$(P)TX$(ID)-SEQ1-END") {
  field(DESC, "Sequence 1 end HW counter vaule")
  field(DTYP, "regDev")
  field(INPA, "$(SEQ1-END-HW-CTR) NPP")
  field(CALC, "A")
  field(OUT, "@$(NAME):0x34 T=UINT32")
  field(FLNK, "$(P)TX$(ID)-SEQ2-START")
}

record(calcout,"$(P)TX$(ID)-SEQ2-START") {
  field(DESC, "Sequence 2 start HW counter vaule")
  field(DTYP, "regDev")
  field(INPA, "$(SEQ2-START-HW-CTR) NPP")
  field(CALC, "A")
  field(OUT, "@$(NAME):0x38 T=UINT32")
  field(FLNK, "$(P)TX$(ID)-SEQ2-END")
}

record(calcout,"$(P)TX$(ID)-SEQ2-END") {
  field(DESC, "Sequence 2 end HW counter vaule")
  field(DTYP, "regDev")
  field(INPA, "$(SEQ2-END-HW-CTR) NPP")
  field(CALC, "A")
  field(OUT, "@$(NAME):0x3C T=UINT32")
  field(FLNK, "$(P)TX$(ID)-Flush_")
}

record(longout, "$(P)TX$(ID)-Flush_") {
  field(DTYP, "regDev")
  field(OUT, "@$(NAME):0x0")
  field(VAL, "1")
  field(FLNK,"$(P)TX$(ID)-JMP-CNT")
}

